name: Publish Docker Image to GHCR

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: agndam-corp/web-frontend

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.ADMIN_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=short

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ github.event_name != 'pull_request' }}

  update-kustomization:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    if: github.event_name != 'pull_request'
    permissions:
      contents: write
    steps:
      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Get image tag
        id: image-tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout server-one repository
        uses: actions/checkout@v4
        with:
          repository: agndam-corp/server-one
          token: ${{ secrets.ADMIN_TOKEN }}
          path: server-one

      - name: Update image tag in kustomization.yaml
        run: |
          cd server-one/apps/webapp/frontend
          NEW_TAG="${{ steps.image-tag.outputs.tag }}"
          
          # Update the newTag value for the specific image in the kustomization.yaml
          yq eval '.images |= map(if .name == "ghcr.io/agndam-corp/web-frontend" then .newTag = env(NEW_TAG) else . end)' -i kustomization.yaml

      - name: Commit and push changes
        run: |
          cd server-one
          git config --local user.email \"action@github.com\"
          git config --local user.name \"GitHub Action\"
          git add apps/webapp/frontend/kustomization.yaml
          if git diff --staged --quiet; then
            echo \"No changes to commit\"
          else
            git commit -m \"Update webapp-frontend image tag to ${{ steps.image-tag.outputs.tag }}\"
            git push
          fi